{
  "type": "object",
  "properties": {
    "ALLOW_DB_CREATION": {
      "type": "string",
      "description": "Whether to allow the creation of new databases. Useful for ensuring existing production environments don't inadvertently create new databases.",
      "enum": [
        "true",
        "false"
      ],
      "default": "false",
      "source": "@saflib/env"
    },
    "CLIENT_SUBDOMAINS": {
      "type": "string",
      "description": "Comma-separated list of client subdomains, e.g. 'www,app,auth,'. Include an empty string (such as in the example) to indicate there's a client for the root domain.",
      "source": "@saflib/env"
    },
    "DEPLOYMENT_NAME": {
      "type": "string",
      "description": "The name of the deployment, e.g. 'production', 'staging', 'development'. This may be used in strings such as database file names and logging metadata; each deployment should have a unique name.",
      "source": "@saflib/env"
    },
    "DOMAIN": {
      "type": "string",
      "description": "The root domain of the deployment, e.g. 'saf.com'.",
      "source": "@saflib/env"
    },
    "DOMAIN_REDIRECTS": {
      "type": "string",
      "description": "Comma-separated list of domains to redirect to the root domain, e.g. 'old-subdomain1.saf.com,old-subdomain2.saf.com'.",
      "source": "@saflib/env"
    },
    "IDENTITY_SERVICE_ADMIN_EMAILS": {
      "type": "string",
      "description": "Comma-separated list of emails who will get the 'admin' scope. Emails must be validated to receive this scope.",
      "source": "@saflib/identity-http"
    },
    "IDENTITY_SERVICE_DISABLE_RATE_LIMITING": {
      "type": "string",
      "description": "Whether to disable rate limiting. Set to 'true' to disable.",
      "source": "@saflib/identity-http"
    },
    "IDENTITY_SERVICE_GRPC_PORT": {
      "type": "string",
      "description": "The port on which the gRPC server will listen, or the client will connect.",
      "source": "@saflib/identity-rpcs"
    },
    "IDENTITY_SERVICE_HTTP_PORT": {
      "type": "string",
      "source": "@saflib/identity-http"
    },
    "MOCK_INTEGRATIONS": {
      "type": "string",
      "description": "Whether to mock 3rd party integrations. Set to 'true' to mock. And integration packages should respect this setting.",
      "enum": [
        "true",
        "false"
      ],
      "source": "@saflib/env"
    },
    "NODEMAILER_TRANSPORT_CONFIG": {
      "type": "string",
      "description": "JSON string which can be passed into nodemailer.createTransport. See https://nodemailer.com/usage for more details.",
      "source": "@saflib/email"
    },
    "NODE_ENV": {
      "type": "string",
      "description": "The environment of the deployment. Generally should avoid using this, consider its use deprecated, prefer instead more specific environment variables.",
      "enum": [
        "development",
        "production",
        "test"
      ],
      "source": "@saflib/env"
    },
    "PROTOCOL": {
      "type": "string",
      "description": "The protocol of the deployment, e.g. 'https'",
      "enum": [
        "https",
        "http"
      ],
      "source": "@saflib/env"
    },
    "SERVICE_SUBDOMAINS": {
      "type": "string",
      "description": "Comma-separated list of service subdomains, e.g. 'revenue,geo,identity,core'.",
      "source": "@saflib/env"
    },
    "TZ": {
      "type": "string",
      "description": "The timezone of the deployment, e.g. 'America/New_York'. Must be UTC.",
      "const": "UTC",
      "source": "@saflib/env"
    }
  },
  "required": [
    "CLIENT_SUBDOMAINS",
    "DEPLOYMENT_NAME",
    "DOMAIN",
    "IDENTITY_SERVICE_GRPC_PORT",
    "IDENTITY_SERVICE_HTTP_PORT",
    "NODEMAILER_TRANSPORT_CONFIG",
    "NODE_ENV",
    "PROTOCOL",
    "SERVICE_SUBDOMAINS",
    "TZ"
  ],
  "additionalProperties": false
}